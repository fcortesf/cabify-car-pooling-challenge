/*
 * Car pooling API
 *
 * Cabify Car pooling challenge
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;

using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;
using car_pooling_api.Services;
using System.Linq;
using System.Threading.Tasks;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class CarApiController : ControllerBase
    { 
        private readonly CarService carService;
        public CarApiController(CarService service)
        {
            carService = service;
        }
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Load the list of available cars in the service and remove all previous data (existing journeys and cars). This method may be called more than once during the life cycle of the service.</remarks>
        /// <param name="body">The list of cars to load.</param>
        /// <response code="200">OK. When the list is registered correctly.</response>
        /// <response code="400">Bad request. When there is a failure in the request format, expected headers, or the payload can&#39;t be unmarshalled.</response>
        [HttpPut]
        [Route("/cars")]
        [ValidateModelState]
        [SwaggerOperation("CarsPut")]
        public async Task<IActionResult> CarsPut([FromBody]List<CarDto> body)
        { 
            var duplicates = body.GroupBy(x => x.Id).Any(g => g.Count() > 1);
            if (duplicates) {
                return StatusCode(400, "Duplicated Ids");
            }
            await carService.InitCarDatabase(body);
            return StatusCode(200);
        }
    }
}
